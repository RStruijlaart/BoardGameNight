// <auto-generated />
using System;
using BoardGameNight.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoardGameNight.Infrastructure.Migrations
{
    [DbContext(typeof(BoardgameDbContext))]
    [Migration("20241017174527_InitalSetup")]
    partial class InitalSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoardGameNight.Domain.Models.Boardgame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IsAdult")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Boardgames");
                });

            modelBuilder.Entity("BoardGameNight.Domain.Models.BoardgameNight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FoodAndDrinks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdult")
                        .HasColumnType("bit");

                    b.Property<int>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<int>("OrganizerId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizerId");

                    b.ToTable("BoardgameNights");
                });

            modelBuilder.Entity("BoardGameNight.Domain.Models.GameNightBoardgame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoardgameId")
                        .HasColumnType("int");

                    b.Property<int>("BoardgameNightId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoardgameId");

                    b.HasIndex("BoardgameNightId");

                    b.ToTable("GameNightBoardgames");
                });

            modelBuilder.Entity("BoardGameNight.Domain.Models.GameNightReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BoardgameNightId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewDescription")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoardgameNightId");

                    b.ToTable("GameNightReviews");
                });

            modelBuilder.Entity("BoardGameNight.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BoardgameNightId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoardgameNightId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BoardGameNight.Domain.Models.BoardgameNight", b =>
                {
                    b.HasOne("BoardGameNight.Domain.Models.User", "Organizer")
                        .WithMany()
                        .HasForeignKey("OrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organizer");
                });

            modelBuilder.Entity("BoardGameNight.Domain.Models.GameNightBoardgame", b =>
                {
                    b.HasOne("BoardGameNight.Domain.Models.Boardgame", "Boardgame")
                        .WithMany()
                        .HasForeignKey("BoardgameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoardGameNight.Domain.Models.BoardgameNight", "BoardgameNight")
                        .WithMany("GameNightBoardgames")
                        .HasForeignKey("BoardgameNightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boardgame");

                    b.Navigation("BoardgameNight");
                });

            modelBuilder.Entity("BoardGameNight.Domain.Models.GameNightReview", b =>
                {
                    b.HasOne("BoardGameNight.Domain.Models.BoardgameNight", null)
                        .WithMany("Reviews")
                        .HasForeignKey("BoardgameNightId");
                });

            modelBuilder.Entity("BoardGameNight.Domain.Models.User", b =>
                {
                    b.HasOne("BoardGameNight.Domain.Models.BoardgameNight", null)
                        .WithMany("Participants")
                        .HasForeignKey("BoardgameNightId");
                });

            modelBuilder.Entity("BoardGameNight.Domain.Models.BoardgameNight", b =>
                {
                    b.Navigation("GameNightBoardgames");

                    b.Navigation("Participants");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
